# 285. Создайте две переменные empty и empty_too, сохраните в них значение None.
#      При помощи оператора is выведите на первой строке результат их сравнения на равенство и затем на второй строке результат их сравнения на неравенсто.

print((empty := None) is (empty_too := None), empty is not empty_too, sep='\n')

# 286. Создайте список i_love_none из 50 элементов None и распечатайте его.

print(i_love_none := [None for _ in range(50)])

# 287. Сохраните в переменной my_tuple кортеж состоящий из 4 любых элементов. Распечатывать ничего не нужно, просто создайте кортеж.

my_tuple = (1,) * 4

# 288. Сохраните в переменной lonely кортеж из одного элемента: 777. Распечатайте на экран lonely.

print((lonely := (777,)))

# 289. Допишите программу ниже, чтобы она вывела через пробел в одной строке значения самого маленького и самого большого элементов кортежа my_tuple.

my_tuple = (-214, 181, -139, 448, -664, -66, 213, 832, 717, -462, -924, -706, -85, -244, -222, -340, -482, -518, -781, 759, -593, 905, -354, -377, 
            -141, -742, 383, -381, 109, -639, -480, -810, -686, 892, -612, 696, 993, 791, 631, -493, -218, -829, -275, 619, -628, -241, -565, -835, 
            -69, 747, 711, -252, -811, -407, -153, 904, 933, -254, 307, -493, -419, -109, -543, 155, -127, 613, -452, -459, 856, 562, 333, -66, -77, 
            -598, -779, -278, 867, 321, -20, -415, -357, 735, -906, -14, -370, 453, -630, -736, -830, -917, 32, 422, -895, 198, 284, 472, -986, -964, -73, 29)
print(min(my_tuple), max(my_tuple))

# 290. Допишите программу ниже, чтобы она вывела среднее арифметическое всех элементов кортежа my_tuple.

my_tuple = (-214, 181, -139, 448, -664, -66, 213, 832, 717, -462, -924, -706, -85, -244, -222, -340, -482, -518, -781, 759, -593, 905, -354, -377, 
            -141, -742, 383, -381, 109, -639, -480, -810, -686, 892, -612, 696, 993, 791, 631, -493, -218, -829, -275, 619, -628, -241, -565, -835, 
            -69, 747, 711, -252, -811, -407, -153, 904, 933, -254, 307, -493, -419, -109, -543, 155, -127, 613, -452, -459, 856, 562, 333, -66, -77, 
            -598, -779, -278, 867, 321, -20, -415, -357, 735, -906, -14, -370, 453, -630, -736, -830, -917, 32, 422, -895, 198, 284, 472, -986, -964, -73, 29)
print(sum(my_tuple) / len(my_tuple))

# 291. При помощи операций сцепления и дублирования сохраните в переменной result следующий кортеж: 
#      (1, 1, 1, 'R', 'R', 'R', 'R', 'R', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 2, 2, 2, 2, 2)
#      Он состоит из:
#      - трех единиц
#      - пяти букв R
#      - восьми букв A
#      - пяти цифр 2
#      Для удобства можете пользоваться переменными a b c d. В качестве ответа выведите содержимое переменной result.

a = (1,) * 3
b = ('R',) * 5
c = ('A',) * 8
d = (2,) * 5
print(a + b + c + d)

# 292. Сформировать кортеж, содержащий натуральные числа в интервале [a; b] и вывести его на экран.
#      Формат ввода: Вводится два натуральных числа a и b в отдельных строках. Гарантируется, что a<b.
#      Формат вывода: Вывести кортеж, содержащий натуральные числа в интервале [a; b].

print(tuple([*range(int(input()), int(input()) + 1)]))

# 293. Сформировать кортеж, содержащий нечетные натуральные числа в интервале [n;n**2] и вывести его на экран.
#      Формат ввода: Вводится натуральное число n.
#      Формат вывода: Вывести кортеж, содержащий нечетные натуральные числа в интервале [n;n**2].

print((lambda n: tuple(i for i in range(n, n ** 2 + 1) if i % 2))(int(input())))

# 294. Перед вами кортеж my_tuple. Выведите сперва на отдельной строке элемент, хранящийся под индексом 44, а затем на следующей строке - девятое с конца значение.

my_tuple = (32, 45, 32, 60, 43, 19, 39, 75, 50, 12, 53, 13, 28, 70, 68, 5, 64, 55, 30, 47, 23, 20, 17, 36, 45, 
            31, 46, 50, 33, 45, 9, 41, 12, 57, 40, 43, 47, 51, 56, 54, 40, 30, 37, 23, 43, 66, 64, 27, 44, 75, 
            51, 2, 19, 72, 30, 8, 29, 43, 7, 73, 34, 65, 54, 50, 43, 6, 50, 45, 49, 30, 39, 50, 41, 70, 38, 16, 
            31, 51, 72, 45, 58, 39, 50, 56, 24, 30, 9, 53, 27, 31, 68, 56, 26, 39, 34, 50, 10, 12, 3, 27)
print(my_tuple[44], my_tuple[-9], sep='\n')

# 295. Перед вами кортеж my_tuple. При помощи среза сохраните:
#      - в переменную slice_5_10 значения с 5-го индекса по 10-й включительно
#      - в переменную slice_from_20 значения с 20-го индекса и по конец кортежа
#      - в переменную slice_to_35 значения с начала кортежа по 35-й индекс не включительно
#      Распечатайте данные переменные на отдельных строках в порядке их перечисления.

my_tuple = (32, 45, 32, 60, 43, 19, 39, 75, 50, 12, 53, 13, 28, 70, 68, 5, 64, 55, 30, 47, 23, 20, 17, 36, 45, 
            31, 46, 50, 33, 45, 9, 41, 12, 57, 40, 43, 47, 51, 56, 54, 40, 30, 37, 23, 43, 66, 64, 27, 44, 75, 
            51, 2, 19, 72, 30, 8, 29, 43, 7, 73, 34, 65, 54, 50, 43, 6, 50, 45, 49, 30, 39, 50, 41, 70, 38, 16, 
            31, 51, 72, 45, 58, 39, 50, 56, 24, 30, 9, 53, 27, 31, 68, 56, 26, 39, 34, 50, 10, 12, 3, 27)
slice_5_10 = my_tuple[5:11]
slice_from_20 = my_tuple[20:]
slice_to_35 = my_tuple[:35]
print(slice_5_10)
print(slice_from_20)
print(slice_to_35)