# 53. Напишите программу, которая выводит фразу «Я стану крутым программистом!» три раза на отдельных строках; строки должны быть именно такие, символ в символ!.

print('Я стану крутым программистом!\n' * 3)

# 54. Напишите программу, которая напечатает строку, состоящую из 777 букв "W"

print('W' * 777)

# 55. Напишите программу, которая выводит «Лев Николаевич Толстой написал "Война и мир"» (без внешних кавычек).

print('Лев Николаевич Толстой написал "Война и мир"')

# 56. Напишите программу, которая сначала считывает две фразы по очереди, а потом воспроизводит их в той же последовательности, каждую на отдельной строчке.

print(input(), input(), sep='\n')

# 57. Напишите программу, которая сначала считывает три фразы по очереди, а потом воспроизводит их в обратной последовательности, каждую на отдельной строчке.

print(*[input() for _ in range(3)][::-1], sep='\n')

# 58. Напишите программу, которая считывает с клавиатуры слово (или фразу, неважно), после чего выводит это же слово четыре раза на одной строке, разделяя их пробелами.

print(f'{input()} ' * 4)

# 59. Напишите программу, которая считывает с клавиатуры фразу и выводит на экран количество символов, которое содержалось в ней, учитывая все знаки препинания и пунктуации.

print(len(input()))

# 60. Напишите программу, которая считывает с клавиатуры два слова (или фразы, неважно), после чего вы должны при помощи операции конкатенации сцепить вторую фразу с первой и вывести результат на экран.

print((lambda a, b: b + a)(input(), input()))

# 61. Напишите программу, которая считывает с клавиатуры слово (или фразу, неважно), после чего вывести данную строку, увеличенную по длине  в 3 раза.

print(input() * 3)

# 62. Программа принимает на вход три символа через пробел в одну строку. Необходимо вывести код каждого символа при помощи функции ord в определенном формате.

[print(f'Simvol code {i} is {ord(i)}.') for i in input().split()]

# 63. Программа получает на вход строку и ваша задача вывести первый элемент данной строки

print(input()[0])

# 64. Программа получает на вход строку и ваша задача вывести последний символ этой строки

print(input()[-1])

# 65. Программа получает на вход строку и ваша задача вывести первые 4 символа этой строки. Гарантируется, что вводится будет строка длиной не менее 4 символов

print(input()[:4])

# 66. Программа получает на вход строку и ваша задача вывести последние 4 символа этой строки. Гарантируется, что вводится будет строка длиной не менее 4 символов

print(input()[-4:])

# 67. Программа получает на вход строку. Ваша задача вывести все символы этой строки, которые имеют четные индексы

print(input()[::2])

# 68. Программа получает на вход строку. Ваша задача вывести все символы этой строки, которые имеют нечетные индексы

print(input()[1::2])

# 69. Программа получает на вход строку. Ваша задача развернуть строку и вывести ее на экран.

print(input()[::-1])

# 70. Программа получает на вход строку. Выведите каждый третий символ строки в обратном порядке, начиная с последнего.

print(input()[::-3])

# 71. Программа получает на вход одно слово. Ваша задача перенести последнюю букву в начало, тем самым сдвинуть все остальные буквы вправо на один разряд. 
#     В качестве ответа нужно вывести полученное слово

print((s := input())[-1] + s[:-1])

# 72. На вход программе поступает строка, состоящая как из заглавных так из строчных букв латинского алфавита. Ваша задача преобразовать строку так, чтобы все символы были только заглавными.

print(input().upper())

# 73. На вход программе поступает строка, состоящая как из заглавных так из строчных букв латинского алфавита. Ваша задача преобразовать строку так, чтобы все символы были только строчными

print(input().lower())

# 74. Программиста Тихона попросили написать программу, которая должна была сравнивать две введенные строки на равенство, при этом не учитывая регистр букв. 
#     Если строки вводились одинаковые, программа Тихона должна была печатать True, в противном случае False. 
#     Но что-то пошло не так. Тихон написал программу, в которой есть ошибки. Ваша задача исправить имеющуюся программу так, чтобы она прошла все тесты. 
#     s = input()
#     word = int(input())
#     print(s.upper == word.loyer)

print(input().lower() == input().lower())

# 75. На вход подается строка. Ваша задача отформатировать строку так, чтобы первые 3 и последние 3 символа были заглавными, а оставшиеся строчные.
#     Количество букв может быть различным, но гарантируется что их количество не меньше 6

print((s := input())[:3].upper() + s[3:-3].lower() + s[-3:].upper())

# 76. На вход программе поступает строка, состоящая как из заглавных так из строчных букв. 
#     Ваша задача преобразовать строку так, чтобы все строчные символы заменились на заглавные, все заглавные - на строчные. Символы пунктуации и цифры не нужно преобразовывать.
#     В качестве ответа нужно вывести полученную строку

print(input().swapcase())

# 77. На вход программе поступает строка, состоящая как из заглавных так из строчных букв. 
#     Ваша задача преобразовать строку так, чтобы первая буква у каждого слова стала маленькой, а остальные буквы превратились в заглавные. Символы пунктуации и цифры не нужно преобразовывать.
#     В качестве ответа нужно вывести полученную строку

print(input().title().swapcase())

# 78. На вход программе поступает строка, ваша задача подсчитать сколько раз в ней встречается латинская буква "e". При этом стоит учитывать как маленькие, так и заглавные буквы

print(input().lower().count('e'))

# 79. На вход программе поступает строка, ваша задача вывести на экран индекс первой найденной латинской буквы a. Если такого символа в введенной строке нет, выведите -1

print(input().find('a'))

# 80. На вход программе поступает строка, ваша задача вывести на экран индекс последней найденной латинской буквы a. Если такого символа в введенной строке нет, выведите -1

print(input().rfind('a'))

# 81. Программа получает на вход фразу, состоящую из нескольких слов, разделенных пробелом. Ваша задача заменить все пробелы запятыми и вывести полученную строку.

print(input().replace(' ', ','))

# 82. На вход программе поступает строка, ваша задача удалить из нее все символы w и z. Учитываем только маленькие буквы

print(input().replace('w', '').replace('z', ''))

# 83. Петя записался в кружок по программированию. На первом занятии Пете задали написать простую программу. 
#     Программа должна делать следующее: в заданной строке, которая состоит из прописных и строчных латинских букв, она:
#     - удаляет все гласные буквы,
#     - перед каждой согласной буквой ставит символ ".",
#     - все прописные согласные буквы заменяет на строчные.
#     Гласными буквами считаются буквы A, O, Y, E, U, I, а согласными — все остальные. 
#     На вход программе подается ровно одна строка, она должна вернуть результат в виде одной строки, получившейся после обработки.

print(input().lower().replace('a', '').replace('o', '').replace('y', '').replace('e', '').replace('u', '').replace('i', '').replace('', '.')[:-1])

# 84. Программа получает на вход фразу, ваша задача посчитать из скольких слов состоит данная фраза. Для удобства будем считать словом любую последовательность символов.

print(len(input().split()))

# 85. Ниже перед вами представлен список list_strings, состоящий из строк. При помощи метода .join и соединителя - получите строку из этих элементов и выведите ее на экран

list_strings = ['Follow', 'the', 'Cops', 'Back', 'Home']
print('-'.join(list_strings))

# 86. Напишите программу, которая проверяет начинается ли введенная фраза строкой mam вне зависимости от регистра букв. 
#     В качестве ответа необходимо вывести True, если введенная строка начинается с mam, во всех остальных случаях нужно вывести False

print(input().lower().startswith('mam'))

# 87. Программа получает на вход две строки, назовем их s и postfix. Напишите программу, которая проверяет заканчивается ли введенная фраза s строкой postfix.
#     В отдельных строках вводятся два значения: сперва строка s, затем строка postfix
#     Нужно вывести True, если введенная строка s заканчивается строкой postfix , во всех остальных случаях нужно вывести False. Регистр букв нужно учитывать

print(input().endswith(input()))

# 88. Напишите программу, которая проверяет, чтобы введенная фраза s одновременно начиналась со строки prefix и заканчивалась строкой postfix.
#     В отдельных строках вводится три значения: сперва строка s, затем строка prefix и потом postfix
#     Нужно вывести True, если введенная строка s одновременно начинается со строки prefix и заканчивается строкой postfix . Во всех остальных случаях нужно вывести False. 
#     Регистр букв нужно учитывать

print((s := input()).startswith(input()) and s.endswith(input()) == True)

# 89. Напишите программу, которая проверяет состоит ли введенная строка целиком из десятичных цифр. 
#     В качестве ответа необходимо вывести True, если условие выполняется, во всех остальных случаях нужно вывести False

print(input().isdigit())

# 90. Напишите программу, которая проверяет состоит ли введенная строка целиком из заглавных букв.
#     В качестве ответа необходимо вывести True, если условие выполняется, во всех остальных случаях нужно вывести False

print(input().isupper())

# 91. Напишите программу, которая проверяет состоит ли введенная строка целиком из строчных букв.
#     В качестве ответа необходимо вывести True, если условие выполняется, во всех остальных случаях нужно вывести False

print(input().islower())

# 92. На вход программе поступает строка, состоящая из произвольного количества символов. Ваша задача дополнить введенную строку до 15 символов в том случае, когда ей не хватает длины. 
#     Дополнять ее нужно символом -, ставя его в конец строки. В качестве ответа нужно вывести преобразованную строку.
#     Если поступала на вход строка, у которой уже имелось как минимум 15 символов, то преобразований выполнять никаких не нужно. Выведите строку в том виде, в котором она вводилась

print(input().ljust(15, '-'))

# 93. На вход программе поступает строка. Ваша задача дополнить ее впереди восклицательными знаками так, чтобы длина строки стала 10 символов.
#     Если на вход поступила строка, длина которой уже превысила 9 символов, то дополнять ее знаками ! не нужно. Просто выведите строку в том виде, в котором она вводилась

print(input().rjust(10, '!'))

# 94. При помощи метода .center дополните введенную строку до 15 символов. В качестве параметра fillchar возьмите нижнее подчеркивание _

print(input().center(15, '_'))

# 95. На вход программе поступает натуральное число, которое не превосходит значение 109.
#     Ваша задача вывести данное число так, чтобы вывод занимал 10 разрядов. Если у числа не хватает разрядов, необходимо добавлять вперед незначащие нули.

print(input().zfill(10))

# 96. Вводится строка, которая может быть окружена символами -, _, !, ?. Ваша задача избавиться от символов -, _, !, ? и вывести полученную строку

print(input().strip('-_!?'))

# 97. Вводится строка, которая может быть окружена символами -, _, !, ?. Ваша задача убрать`все символы -, _, !, ? слева от строки и вывести полученный результат

print(input().lstrip('-_!?'))

# 98. Вводится строка, которая может быть окружена символами -, _, !, ?. Ваша задача `убрать все символы -, _, !, ? справа от строки и вывести полученный результат

print(input().rstrip('-_!?'))

# 99. Одним из способов кодирования цвета является метод RGB. В нём каждый цвет кодируется значениями базовых цветов: Red (красный), Green (зелёный) и Blue (голубой). 
#     Это три оси цвета, которые имеют градацию значений от 0 до 255. Если все три значения сделать нулевыми, то получится чёрный цвет, а если 255 — белый.
#     Каждый цвет в модели RGB записывается следующим образом: #RRGGBB
#     Данный код состоит из:
#     - символа решетки, который стоит впереди;
#     - потом идут два символа R - код оттенка красного цвета в шестнадцатеричной системе
#     - потом идут два символа G - код оттенка зеленого цвета в шестнадцатеричной системе
#     - потом идут два символа B - код оттенка синего цвета в шестнадцатеричной системе
#     Для перевода в шестнадцатеричную систему можете воспользоваться онлайн-калькулятором или фунцией hex в python.
#     Программе поступают последовательно три числа: значения оттенка красного, потом зеленого и затем синего цветов. Данные числа варьируются от 0 до 255 включительно
#     Ваша задача закодировать оттенки цветов согласно RGB модели.
#     Не забывайте, что на каждый цвет всегда должно отводиться два разряда. Символы букв в шестнадцатеричной системе необходимо записывать в верхнем регистре.

print(f'#{hex(int(input()))[2:].upper().zfill(2)}{hex(int(input()))[2:].upper().zfill(2)}{hex(int(input()))[2:].upper().zfill(2)}')