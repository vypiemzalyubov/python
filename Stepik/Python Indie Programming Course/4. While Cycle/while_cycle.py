# 177. Напишите программу, которая распечатает все натуральные числа от 1000 до 2000 включительно.
#      Каждое число следует выводить на отдельной строчке как в примере ниже
#      1000
#      1001
#      1002
#      ...
#      1998
#      1999
#      2000

x = 1000
while x <= 2000: print(x); x += 1

# 178. Напишите программу, которая распечатает все натуральные числа кратные 5 от 195 до 6785 включительно в порядке убывания.
#      Каждое число следует выводить на отдельной строчке как в примере ниже
#      6785
#      6780
#      6775
#      ...
#      205
#      200
#      195

x = 6785
while x >= 195:
    print(x)
    x -= 5

# 179. Мишка Лимак хочет стать самым большим медведем, ну, или хотя бы стать больше своего старшего брата Боба.
#      Сейчас вес Лимака равен a, а вес Боба равен b. Гарантируется, что вес Лимака меньше или равен весу Боба.
#      Лимак ест много, и его вес утраивается каждый год, а вес Боба удваивается каждый год.
#      Через сколько целых лет Лимак станет строго больше (т. е. будет весить строго больше) Боба?
#      В единственной строке находятся два целых числа a и b (1 ≤ a ≤ b ≤ 10) — веса Лимака и Боба соответственно.
#      Выведите одно целое число — через сколько целых лет Лимак станет строго больше Боба.

(x, y), c = map(int, input().split()), 0
while x <= y:
    c, x, y = c + 1, x * 3, y * 2
print(c)

# 180. Японцы считают цифру «4» очень несчастливой, они даже исключают ее из нумерации этажей. Давайте и мы, от греха подальше, избавимся от этой цифры в списке numbers. 
#      Ваша задача удалить все упоминания цифры «4» в списке numbers и затем вывести список

numbers = [2, 3, 7, 9, 5, 0, 6, 3, 6, 0, 1, 7, 9, 4, 4, 4, 2, 2, 6, 9, 1, 7, 0, 3, 8, 1, 0, 3, 8, 0, 
           8, 4, 0, 2, 3, 6, 6, 1, 5, 8, 7, 2, 3, 8, 7, 7, 1, 2, 2, 8, 4, 3, 4, 8, 0, 7, 9, 8, 3, 7, 
           7, 7, 7, 5, 1, 7, 4, 5, 0, 8, 0, 9, 2, 4, 7, 6, 6, 5, 9, 7, 1, 7, 8, 8, 3, 4, 9, 7, 6, 4, 
           2, 0, 0, 0, 9, 4, 0, 9, 4, 4, 4, 5, 5, 4, 2, 5, 9, 4, 8, 1, 5, 7, 1, 0, 2, 6, 8, 7, 2, 7, 
           9, 3, 6, 4, 7, 5, 0, 7, 2, 0, 8, 2, 9, 8, 6, 4, 4, 7, 5, 5, 9, 4, 9, 5, 6, 9, 1, 1, 3, 1, 
           5, 2, 1, 7, 0, 0, 7, 8, 1, 3, 0, 0, 4, 4, 3, 3, 6, 7, 8, 6, 1, 2, 0, 2, 0, 9, 9, 0, 5, 2, 
           4, 1, 7, 4, 9, 9, 4, 9, 6, 9, 2, 7, 1, 2, 4, 5, 4, 0, 9, 0]
while 4 in numbers:
    numbers.remove(4)
print(*numbers)

# 181. На вход программе поступает слово. Вам необходимо воспроизвести процесс, в котором каждый раз у этого слово будет пропадать первая и последняя буква. 
#      Этот процесс необходимо закончить, когда в слове останется только одна буква или слово  станет пустой строкой. При этом результат каждого этапа нужно выводить

s = list(input())
while s:
    try:
        print(*s, sep='')
        s.pop(0)
        s.pop()
    except IndexError as e:
        print(*s, sep='')

# 182. Выведите все точные квадраты натуральных чисел, не превосходящие входного натурального числа N.
#      На вход поступает натуральное число N
#      Необходимо вывести  все точные квадраты натуральных чисел, не превосходящие данного числа N

n, l = int(input()), []
x = n
while n:
    if n * n <= x:
        l.append(n * n)
    n -= 1
print(*l[::-1], sep='\n')

# 183. В первый день спортсмен пробежал X километров. В каждый последующий день он увеличивал пробег на 15% от предыдущего дня. 
#      Вам необходимо определить номер дня, в который пробег спортсмена составил не менее Y километров. Само число Y будет поступать на вход программе.
#      Программа получает на вход два натуральных числа X и Y
#      Выведите целое число – номер дня, в который спортсмен пробежал не менее Y километров.

(x, y), d = map(int, input().split()), 1
while x <= y:
    d += 1
    x += x * 0.15
print(d)

# 184. У Васи есть n пар носков. Утром каждого дня, собираясь в школу, Вася должен надеть пару носков. 
#      Вечером, прийдя со школы, Вася снимает надетые носки и выбрасывает их. Каждый m-й день (в дни с номерами m, 2m, 3m, ...) мама покупает Васе одну пару носков. 
#      Она делает это поздно вечером, поэтому Вася может надеть новые носки не раньше следующего дня. На сколько подряд идущих дней Васе хватит носков?
#      В единственной строке записано два целых числа n и m (1 ≤ n ≤ 100; 2 ≤ m ≤ 100), разделенные пробелом.
#      Выведите единственное целое число — ответ на задачу.

(n, m), d = map(int, input().split()), 0
while n:
    d += 1
    n -= 1
    if d % m == 0: n += 1
print(d)

# 185. Программист Василий любит романтику — поэтому на этот Новый Год он решил освещать свою комнату свечами.
#      У Василия есть a свечей. Когда Василий зажигает новую свечу, сначала она горит ровно один час, а затем тухнет. 
#      Василий — сообразительный малый, поэтому из b потухших свечей он умеет получать одну новую свечу. В последствии эту новую свечу (так же как и другие новые свечи) можно зажечь.
#      Теперь Василию интересно, на сколько часов освещения хватит его свечек, если он будет действовать оптимальным образом. Помогите ему найти это число.
#      В единственной строке заданы два целых числа a и b (1 ≤ a ≤ 1000; 2 ≤ b ≤ 1000).
#      Выведите единственное целое число — количество часов, которое Василий сможет освещать комнату.

(lambda a, b: print(a + (a - 1) // (b - 1)))(*map(int, input().split()))

# 186. В архитектуре компьютера важную роль играют числа, являющиеся степенями двойки: 1, 2, 4, 8 и так далее. 
#      Напишите программу, которая проверяет, является ли введённое натуральное число степенью двойки. Если да, то выводится сама эта степень; если нет, выводится «НЕТ»

