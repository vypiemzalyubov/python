# 355. Давайте начнем с легкого примера. Создадим функцию с именем keanu_reeves, которая выводит сообщение "YOU'RE BREATHTAKING".and
#      Ваша задача написать только определение функции keanu_reeves.

def keanu_reeves():
    print("YOU'RE BREATHTAKING")

# 356. Всеми любимая программа «hello world». Создайте функцию с именем say_hello_world , которая принимает на вход имя человека в виде строки и печатает фразу «{name} говорит hello world!»
#      Ваша задача написать только определение функции say_hello_world.

def say_hello_world(name):
    print(f'{name} говорит hello world!')

# 357. Напишите функцию summa_n, которая принимает одно целое положительное t число и находит сумму всех чисел от 1 до t включительно. Программа должна распечатать сообщение:
#      "Я знаю, что сумма чисел от 1 до {t} равна {S}", где в качестве t и S вам необходимо подставить значения (см. тестовые данные).
#      Ваша задача написать только определение функции summa_n, вызывать ее не нужно.

def summa_n(t):
    s = sum(range(1, t + 1))
    print(f'Я знаю, что сумма чисел от 1 до {t} равна {s}')

# 358. Напишите функцию exponentiation, которая принимает на вход целое число и выводит на экран через пробел квадрат и куб этого числа. 
#      Вам необходимо написать только определение функции exponentiation.

def exponentiation(x):
    print(f'{x ** 2} {x ** 3}')

# 359. Напишите функцию sum_num для суммирования всех цифр строки. 
#      Функция должна принимать строку, суммировать все ее символы, которые являются цифрами, и в качестве ответа выводить найденную сумму.
#      Вам необходимо написать только определение функции sum_num.

def sum_num(s):
    print(sum(int(i) for i in s if i.isdigit()))

# 360. Напишите функцию get_body_mass_index, которая принимает массу тела человека в кг и рост в см и рассчитывает индекс массы тела человека по формуле:
#      index = масса / рост ** 2
#      Рост указывается в формуле в метрах, а не в сантиметрах.
#      Функция и должна вывести на экран информацию о массе человека, отталкиваясь от найденного индекса:
#      - если индекс < 18.5 программа должна вывести Недостаточная масса тела
#      - если 18.5 <= индекс <= 25 программа должна вывести Норма
#      - если индекс > 25 программа должна вывести Избыточная масса тела
#      Вам необходимо написать только определение функции get_body_mass_index.

def get_body_mass_index(weight, height):
    index = weight / ((height / 100)) ** 2
    print('Недостаточная масса тела' if index < 18.5 else 'Избыточная масса тела' if index > 25 else 'Норма')

# 361. Напишите функцию check_password, которая проверяет переданный ей пароль на сложность и печатает на экран результат проверки.
#      Сложным паролем будет считаться комбинация символов, в которой:
#      - Есть хотя бы 3 цифры
#      - Есть хотя бы одна заглавная буква 
#      - Есть хотя бы один символ из следующего набора "!@#$%*"
#      - Общая длина не менее 10 символов
#      Если пароль прошел все проверки, функция должна вывести на экран фразу "Perfect password", в противном случае - "Easy peasy".
#      Вам необходимо написать только определение функции check_password.

def check_password(password):
    len_digit = title_char = spec_char = 0
    for i in password:
        if i.isdigit():
            len_digit +=1
        if i.isupper():
            title_char += 1
        if i in '!@#$%*':
            spec_char += 1
    print('Perfect password' if len_digit >= 3 and title_char and spec_char and len(password) >= 10 else 'Easy peasy')
    
# 362. Создайте функцию count_letters, которая принимает на вход фразу и подсчитывает, какое количество в ней строчных(K) и заглавных (N) букв, 
#      все остальные символы игнорируются. Функция должна вывести на экран информацию о найденных буквах в определенном формате:
#      Количество заглавных символов: N
#      Количество строчных символов: K
#      Вам необходимо написать только определение функции count_letters.

def count_letters(s):
    n = k = 0
    for char in s:
        n += char.isupper()
        k += char.islower() 
    print(f'Количество заглавных символов: {n}\nКоличество строчных символов: {k}')