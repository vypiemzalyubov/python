# 188. Decimal числа, разделенные символом пробела, хранятся в строковой переменной s. 
#      Дополните приведенный код, чтобы он вывел сумму наибольшего и наименьшего Decimal числа.

from decimal import Decimal as D

s = '0.77 4.03 9.06 3.80 7.08 5.88 0.23 4.65 2.79 0.90 4.23 2.15 3.24 8.57 0.10 8.57 1.49 5.64 3.63 8.36 1.56 6.67 1.46 5.26 4.83 7.23 1.22 1.02 7.82 9.97 5.40 9.79 9.82 2.78 2.96 0.07 1.72 7.24 7.84 9.23 1.71 6.24 5.78 5.37 0.03 9.60 8.86 2.73 5.83 6.50'

dec = [D(i) for i in s.split()]
print(max(dec) + min(dec))

# 189. Decimal числа, разделенные символом пробела, хранятся в строковой переменной s. 
#      Дополните приведенный код, чтобы он вывел на первой строке сумму всех чисел, а на второй строке 5 самых больших чисел в порядке убывания, разделенных символом пробела.

from decimal import Decimal as D

s = '9.73 8.84 8.92 9.60 9.32 8.97 8.53 1.26 6.62 9.85 1.85 1.80 0.83 6.75 9.74 9.11 9.14 5.03 5.03 1.34 3.52 8.09 7.89 8.24 8.23 5.22 0.30 2.59 1.25 6.24 2.14 7.54 5.72 2.75 2.32 2.69 9.32 8.11 4.53 0.80 0.08 9.36 5.22 4.08 3.86 5.56 1.43 8.36 6.29 5.13'

dec = [D(i) for i in s.split()]
print(sum(dec))
print(*sorted(dec, reverse=True)[:5], sep=' ')

# 190. Дополните приведенный код, чтобы он вывел сумму наибольшей и наименьшей цифры Decimal числа.

from decimal import *
num = Decimal(input())

if int(num) == 0:
    print(max(num.as_tuple().digits))
else:
    print(max(num.as_tuple().digits) + min(num.as_tuple().digits))

# 191. На вход программе подается Decimal число d. Напишите программу, которая вычисляет значение выражения:
#      e**d+ln(d)+lg(d)+sqrt(d)
# 
#      Формат входных данных
#      На вход программе подается положительное десятичное число d.
# 
#      Формат выходных данных
#      Программа должна вывести искомое значение выражения.

num = __import__('decimal').Decimal(input())

print(num.exp() + num.ln() + num.log10() + num.sqrt())

# 192. Десятичные числа хранятся в списке numbers в виде строк. 
#      Дополните приведенный код, чтобы он для каждого десятичного числа вывел его представление в виде обыкновенной дроби в формате:
#      - десятичное число = обыкновенная дробь
# 
#      Примечание. Программа должна вывести
#      6.34 = 317/50
#      4.08 = 102/25
#      3.04 = 76/25
#      ...

from fractions import Fraction

numbers = ['6.34', '4.08', '3.04', '7.49', '4.45', '5.39', '7.82', '2.76', '0.71', '1.97', '2.54', '3.67', '0.14', '4.29', '1.84', '4.07', '7.26', '9.37', '8.11', '4.30', '7.16', '2.46', '1.27', '0.29', '5.12', '4.02', '6.95', '1.62', '2.26', '0.45', '6.91', '7.39', '0.52', '1.88', '8.38', '0.75', '0.32', '4.81', '3.31', '4.63', '7.84', '2.25', '1.10', '3.35', '2.05', '7.87', '2.40', '1.20', '2.58', '2.46']

for n in numbers:
    print(f'{n} = {Fraction(n)}')

# 193. Десятичные числа, разделенные символом пробела, хранятся в строковой переменной s. 
#      Дополните приведенный код, чтобы он вывел сумму наибольшего и наименьшего числа в виде обыкновенной дроби.

from fractions import Fraction

s = '0.78 4.3 9.6 3.88 7.08 5.88 0.23 4.65 2.79 0.90 4.23 2.15 3.24 8.57 0.10 8.57 1.49 5.64 3.63 8.36 1.56 6.67 1.46 5.26 4.83 7.13 1.22 1.02 7.82 9.97 5.40 9.79 9.82 2.78 2.96 0.07 1.72 7.24 7.84 9.23 1.71 6.24 5.78 5.37 0.03 9.60 8.86 2.73 5.83 6.50 0.123 0.00021'

numbers = [Fraction(n) for n in s.split()]
print(max(numbers) + min(numbers))

# 194. Даны два натуральных числа m и n. Напишите программу, которая сокращает дробь m/n и выводит ее.
# 
#      Формат входных данных
#      На вход программе подается два натуральных числа, числитель и знаменатель дроби, каждое на отдельной строке.
# 
#      Формат выходных данных
#      Программа должна вывести ответ на задачу.

print(__import__('fractions').Fraction(int(input()), int(input())))

# 195. Даны две дроби в формате a/b. Напишите программу, которая вычисляет и выводит их сумму, разность, произведение и частное.
# 
#      Формат входных данных
#      На вход программе подаются две ненулевые дроби, каждая на отдельной строке.
# 
#      Формат выходных данных
#      Программа должна вывести сумму, разность, произведение и частное двух дробей.
# 
#      Примечание. Обратите внимание на третий тест: исходные дроби сокращать не нужно, а результат нужно.

from fractions import Fraction

a, b = input(), input()
print(f'{a} + {b} = {Fraction(a) + Fraction(b)}')
print(f'{a} - {b} = {Fraction(a) - Fraction(b)}')
print(f'{a} * {b} = {Fraction(a) * Fraction(b)}')
print(f'{a} / {b} = {Fraction(a) / Fraction(b)}')

# 196. На вход программе подается натуральное число n. Напишите программу, которая вычисляет и выводит рациональное число, равное значению выражения 
#      1/1**2 + 1/2**2 + ... +1/n**2
# 
#      Формат входных данных
#      На вход программе подается натуральное число n.
# 
#      Формат выходных данных
#      Программа должна вывести ответ на задачу.
# 
#      Примечание 1. Результирующая дробь должна быть несократимой.
#      Примечание 2. Подробнее о ряде обратных квадратов можно почитать тут.

print(sum([__import__('fractions').Fraction(1, i ** 2) for i in range(1, int(input()) + 1)]))

# 197. На вход программе подается натуральное число n. Напишите программу, которая вычисляет и выводит рациональное число, равное значению выражения 
#      1/1! + 1/2! + ... + 1/n!
# 
#      Формат входных данных
#      На вход программе подается натуральное число n.
# 
#      Формат выходных данных
#      Программа должна вывести ответ на задачу.
# 
#      Примечание 1. Результирующая дробь должна быть несократимой.
#      Примечание 2. Для вычисления факториала можно использовать функцию factorial из модуля math.

print(sum([__import__('fractions').Fraction(1, __import__('math').factorial(i)) for i in range(1, int(input()) + 1)]))

# 198. Дима учится в седьмом классе и сейчас они проходят обыкновенные дроби с натуральными числителем и знаменателем. 
#      Вчера на уроке математики Дима узнал, что дробь называется правильной, если ее числитель меньше знаменателя, и несократимой, если нет равной ей дроби с меньшими натуральными числителем и знаменателем.
#      Дима очень любит математику, поэтому дома он долго экспериментировал, придумывая и решая разные задачки с правильными несократимыми дробями. Одну из этих задач Дима предлагает решить вам с помощью компьютера.
#      На вход программе подается натуральное число n. Напишите программу, которая находит наибольшую правильную несократимую дробь с суммой числителя и знаменателя равной n.
# 
#      Формат входных данных
#      На вход программе подается натуральное число n.
# 
#      Формат выходных данных
#      Программа должна вывести ответ на задачу.
# 
#      Примечание. Возможно вам потребуется функция gcd(), которая позволяет находить наибольший общий делитель (НОД) двух чисел. Функция реализована в модуле math.

n = int(input())

for i in range((n-1)//2, 0, -1):
    if __import__('math').gcd(i, n-i) == 1:
        print(__import__('fractions').Fraction(i, n-i))
        break

# 199. На вход программе подается натуральное число n. Напишите программу, которая выводит в порядке возрастания все несократимые дроби, заключённые между 0 и 1, знаменатель которых не превосходит n.
# 
#      Формат входных данных
#      На вход программе подается натуральное число n,n>1.
# 
#      Формат выходных данных
#      Программа должна вывести ответ на задачу.
# 
#      Примечание. Возможно вам потребуется функция gcd(), которая позволяет находить наибольший общий делитель (НОД) двух чисел. Функция реализована в модуле math.

n = int(input())
result = []

while n != 1:
    for i in range(1, n):
        if __import__('math').gcd(i, n) == 1:
            result.append(f'{i}/{n}')
    n -= 1

print(*sorted(map(__import__('fractions').Fraction, result)), sep='\n')