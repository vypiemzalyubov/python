# 21. Дополните приведенный код, используя списочный метод append(), чтобы список list1 имел вид:
#     list1 = [10, 20, [300, 400, [5000, 6000, 7000], 500], 30, 40]

list1 = [10, 20, [300, 400, [5000, 6000], 500], 30, 40]
list1[2][2].append(7000)
print(list1)

# 22. Дополните приведенный код, используя списочный метод extend(), чтобы список list1 имел вид:
#     list1 = ['a', 'b', ['c', ['d', 'e', ['f', 'g', 'h', 'i', 'j'], 'k'], 'l'], 'm', 'n']
#     Подсписок для расширения  sub_list = ['h', 'i', 'j'].

list1 = ['a', 'b', ['c', ['d', 'e', ['f', 'g'], 'k'], 'l'], 'm', 'n']
sub_list = ['h', 'i', 'j']
list1[2][1][2].extend(['h', 'i', 'j'])
print(list1)

# 23. Дополните приведенный код, используя цикл for и встроенную функцию max(), чтобы он выводил максимальный элемент среди всех элементов вложенных списков списка list1.

list1 = [[1, 7, 8], [9, 7, 102], [6, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
print(max([max(item) for item in list1]))

# 24. Дополните приведенный код так, чтобы список list1 имел вид:
#     list1 = [[8, 7, 1], [102, 7, 9], [105, 106, 102], [103, 98, 99, 100], [3, 2, 1]]

list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
print([item[::-1] for item in list1])

# 25. Дополните приведенный код так, чтобы он выводил единственное число: сумму всех чисел списка list1, разделённую на общее количество всех чисел.

list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
total = sum([sum(item) for item in list1])
counter = sum([len(item) for item in list1])
print(total / counter)

# 26. На вход программе подается число n. Напишите программу, которая создает и выводит построчно список, состоящий из n списков [[1, 2, ..., n], [1, 2, ..., n], ..., [1, 2, ..., n]].
# 
#     Формат входных данных
#     На вход программе подается натуральное число n.
# 
#     Формат выходных данных
#     Программа должна вывести построчно указанный список.

n = int(input())
lst = [i for i in range(1, n + 1)]
print(*[lst for _ in lst], sep='\n')

# 27. На вход программе подается число n. Напишите программу, которая создает и выводит построчно вложенный список, состоящий из n списков [[1], [1, 2], [1, 2, 3], ..., [1, 2, ..., n]].
# 
#     Формат входных данных
#     На вход программе подается натуральное число n.
# 
#     Формат выходных данных
#     Программа должна вывести построчно указанный вложенный список.

n = int(input())
lst = [i for i in range(1, n + 1)]
print(*[lst[:i] for i in lst], sep='\n')

# 28. Треугольник Паскаля — бесконечная таблица биномиальных коэффициентов, имеющая треугольную форму. В этом треугольнике на вершине и по бокам стоят единицы. Каждое число равно сумме двух расположенных над ним чисел.
# 
#     0:      1
#     1:     1 1
#     2:    1 2 1
#     3:   1 3 3 1
#     4:  1 4 6 4 1
#           .....
# 
#     На вход программе подается число n. Напишите программу, которая возвращает указанную строку треугольника Паскаля в виде списка (нумерация строк начинается с нуля).
# 
#     Формат входных данных
#     На вход программе подается число n (n≥0).
# 
#     Формат выходных данных
#     Программа должна вывести указанную строку треугольника Паскаля в виде списка.

def pascal(n):
    triangle = [[1] + [0]*n for i in range(n+1)]
    for i in range(1, n+1):
        for j in range(1, i+1):
            triangle[i][j] = triangle[i-1][j] + triangle[i-1][j-1]    
    return(triangle[-1])

print(pascal(int(input())))

# 29. На вход программе подается натуральное число n. Напишите программу, которая выводит первые n строк треугольника Паскаля.
# 
#     Формат входных данных
#     На вход программе подается число n (n≥1).
# 
#     Формат выходных данных
#     Программа должна вывести первые n строк треугольника Паскаля, каждую на отдельной строке в соответствии с образцом.

n = int(input())
triangle = [[1] + [0]*n for _ in range(n+1)]
for i in range(1, n+1):
    for j in range(1, i+1):
        triangle[i][j] = triangle[i-1][j] + triangle[i-1][j-1]
for i in range(n):
    for j in range(i+1):
        print(triangle[i][j], end=' ')
    print()