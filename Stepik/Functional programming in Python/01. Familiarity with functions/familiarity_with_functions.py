# В вашем распоряжении имеются две функции: say_hello и choose_profession
# Ваша задача вызвать сперва say_hello и передать значение Артем, а затем вызвать choose_profession со значением Разработчик

def say_hello(name):
    print(f"Привет, {name}!")

say_hello("Артем")

def choose_profession(profession):
    print(f'Я хочу стать {profession}ом')

choose_profession("Разработчик")

# Программист Сергей любит копипастить чужие программы. Но что-то пошло не так, и Сергей не может понять, почему его программа не запускается.
# В ней явно есть ошибки в определении функции
# Найдите и исправьте все ошибки в коде программы

def welcome_to_course(course_name):
    print("Приветствую")
    print(f'Добро пожаловать на курс "{course_name}"')


welcome_to_course('Функции в Python')

# Напишите функцию repeat_n_times, которая будет печатать на экран фразу «Я стану программистом» n раз.
# Само значение n определенно как параметр функции и поступает при вызове
# Ваша задача только написать определение функции repeat_n_times

def repeat_n_times(n):
    print(*["Я стану программистом" for _ in range(n)], sep="\n")

# Напишите функцию repeat_phrase_n_times, которая имеет два параметра: phrase и n.
# Функция repeat_phrase_n_times должна вывести n раз текст, который был передан в параметр phrase
# Ваша задача только написать определение функции repeat_phrase_n_times

def repeat_phrase_n_times(phrase, n):
    print(f"{phrase}\n" * n)

# Определите функцию get_max, которая принимает два числа и возвращает большее из них.
# Ваша задача написать только определение функции get_max

def get_max(a, b):
    return max(a, b)

# Определите функцию multiply, которая принимает список чисел, находит произведение всех его элементов и возвращает найденное произведение в качестве результата.
# Например, вызов multiply([1, 2, 3, 4]) должен вернуть 24. Вызов multiply от пустого списка должен возвращать 1
# Ваша задача написать только определение функции multiply

def multiply(lst):
    if lst is None:
        return 1
    result = 1
    for i in lst:
        result *= i
    return result

# Определите функцию get_reverse, которая принимает строку, разворачивает ее и возвращает полученный результат строки.
# Ваша задача написать только определение функции get_reverse

def get_reverse(s):
    return s[::-1]

# Определите функцию generate_n_chars, которая имеет два параметра: целое число n и символ s.
# Функция должна вернуть строку длиной n символов, состоящую только из символов s.
# Например, вызов generate_n_chars(5, "x") должен возвращать строку «xxxxx».
# Ваша задача написать только определение функции generate_n_chars

def generate_n_chars(n, s):
    return s * n

# Определите функцию print_histogram, которая принимает список целых чисел и выводит гистограмму на экран.
# Например, вызов print_histogram([4, 9, 6]) должен вывести на экран следующее:
# ****
# *********
# ******
# Ваша задача написать только определение функции print_histogram

def print_histogram(lst):
    print(*["*" * i for i in lst], sep="\n")

# Напишите функцию count_words, которая принимает строку и подсчитывает количество слов в строке.
# Слова разделяются между собой пробелом. Функция count_words должна вернуть найденное количество слов в строке в качестве результата.
# В строках могут присутствовать незначащие пробелы с обеих сторон

def count_words(s):
    return sum([1 for i in s.split()])