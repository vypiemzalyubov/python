# 69. В переменной match записан объект Match. Выведите на экран:
#     Его нулевую группу
#     Начало вхождения нулевой группы
#     Конец вхождения нулевой группы
#     Атрибут pos
#     Атрибут endpos
#     Атрибут re
#     Атрибут string

import re

match = re.match(input(), input())
print(match.group(0))
print(match.start(0))
print(match.end(0))
print(match.pos)
print(match.endpos)
print(match.re)
print(match.string)

# 70. Многие функции возвращают None в результате своей работы, если ничего не было найдено.
#     Попробуйте вывести нулевую группу в Match-объекте, если совпадение было найдено. Если его нет - ничего не выводите.

import re

match = re.match(input(), input())
if match:
    print(match[0])

# 71. Напишите программу, которая найдёт первый хештег в тексте и выведет его в консоль.
#     Нужно найти первый хештег в тексте:
#     Начинается с символа #
#     После # стоит последовательность из латинских букв нижнего регистра

import re

pattern = r'#[a-z]+'
string = input()
match = re.search(pattern, string)
print(match[0] if match else '')

# 72. У Илона Маска на компьютере хранится очень много важных данных. Для запуска ракеты на Марс нужен секретный код, который был утерян. 
#     Илон написал программу, которая открывает все файлы на компьютере по очереди и проходит по каждой его строке (4 строки за один проход). 
#     Допишите его программу так, чтобы она находила слово "Код" или "код". 
#     У Илона больше нет никаких секретных кодов на компьютере, поэтому он решил использовать re.search(), т.к. re.search() находит только первое вхождение в строке.
#     Илон не помнит из каких символов он составлен, а также его длину, но он точно помнит, что перед самим кодом было написано слово код или Код. 
#     Если помочь Илону и сказать на какой строке и в каком её месте есть слово код, то он сразу сможет его найти.
#     Если в этих строках кода нет - нужно вывести строку: код не найден.
#     Найти строку, в которой есть последовательности код или Код. Получить номер этой строки и номер начала вхождения последовательности.

import re

line_number = 1
found = False

for i in range(4):
    line = input()
    match = re.search(r"код|Код", line)
    if match:
        print(f"{line_number} {match.start()}")
        found = True
        break
    line_number += 1

if not found:
    print("код не найден")

# 73. Вы получили доступ к секретному чату, в котором часто дарят ключи от Windows 7, и решили украсть один из них, т.к. у вас не активирован Windows 7. 
#     Вы выкачали все сообщения от новых к старым и проходите по ним программой. 
#     Нужно найти первый попавшийся ключ. Нужные ключи в чате всегда отправляют в виде:
#     Activation key: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
#     X - любая цифра или латинская буква в верхнем регистре
#     Перед нужным ключом должна стоять строка Activation key:
#     На вход программе подаётся 5 строк. Гарантируется, что в этих строках есть как минимум 1 ключ.
#     Выведите в консоль ключ, который был найден. Только ключ. Другие данные не нужны.

import re

for i in range(5):
    line = input()
    match = re.search(r"(?<=Activation key: )[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}", line)
    if match:
        print(match.group())

# 74. Даны данные в формате JSON. С помощью регулярных выражений нужно получить ключ t и его значение.
#     Нужно найти ключ t и его значание:
#     Значением является последовательностью из арабских цифр, символов . и +
#     Перед значением стоит t=
#     На вход программе подаётся 1 строка с данными в формате JSON.
#     Выведите в консоль ключ t и его значение.

import re

line = input()
pattern = r"(?<=(t=))[\d.+]+"
match = re.search(pattern, line)
print(match[1] + match[0])