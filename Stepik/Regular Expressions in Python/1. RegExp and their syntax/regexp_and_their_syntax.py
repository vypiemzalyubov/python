# 1. В переменную s записана строка с текстом. Сделайте эту строку сырой, и посмотрите, что изменится в выводе.

s = r"Последовательность \n используется для переноса строк"
print(s)

# 2. На вход программе подаётся целое число. Выведите в консоль строку вида: a * a = b, где a - полученное число, а b - результат произведения числа a на само себя.

a = int(input())
b = a * a
print(f'{a} * {a} = {b}')

# 3. Выведите в консоль следующую строку: \\\'. Попробуйте решить задачу двумя способами.

print(r"\\\'")
print('\\\\\\' + '\'')

# 4.На вход программе подаётся два целых числа a и b, каждое на новой строке.
#   Выведите в консоль строку вида: a\n + \nb\n = \nc, где a и  b - полученные числа, а c - их сумма.

a = int(input())
b = int(input())
c = a + b
print(f'{a}\\n + \\n{b}\\n = \\n{c}')

# 5. Напишите регулярное выражение, которое найдёт все последовательности тест в тексте.

regex = r'тест'

# 6. Напишите регулярное выражение, которое найдёт все последовательности ТеСт в тексте.

regex = r'ТеСт'

# 7. Напишите регулярное выражение, которое найдёт все последовательности ты в тексте.

regex = r'ты'

# 8. В прошлом задании мы также находили последовательности ты даже в таких словах, как цветы. 
#    Попробуйте найти все слова ты, не последовательности. Словами будем считать последовательность букв, отделённую с двух сторон пробелами.

regex = r' ты '

# 9. Напишите регулярное выражение, которое найдёт все последовательности \n в тексте.

regex = r'\\n'

# 10. Напишите регулярное выражение, которое найдет все последовательности: сон, сок, сом.

regex = r'со[кнм]'

# 11. Напишите регулярное выражение, которое найдёт все последовательности Привет и привет в тексте.

regex = r'[Пп]ривет'

# 12. Дано регулярное выражение [12346789]. Запишите его сокращённую версию в переменную regex.

regex = r'[1-46-9]'

# 13. Напишите регулярное выражение, которое найдёт все цифры из шестнадцатеричной системы счисления.

regex = r'[0-9A-F]'

# 14. Напишите регулярное выражение, которое найдёт все кабинеты с трёхзначным номером: 100 - 999. 

regex = r'[1-9][0-9][0-9] кабинет'

# 15. Напишите регулярное выражение, которое находит все шестизначные коды подтверждения.

regex = r'[0-9]{6}'

# 16. Напишите регулярное выражение, которое найдёт все последовательности из любых пяти символов, кроме перехода на следующую строку.
#     Нужно найти последовательности, подходящие по следующим условиям:
#     Состоит из 5 символов
#     Используются все символы, кроме перехода на новую строку

regex = r'.{5}'

# 17. Напишите регулярное выражение, которое найдёт все трёхбуквенные слова.
#     Нужно найти последовательности, подходящие по следующим условиям:
#     Состоит из 3 букв
#     Используется латинский и кириллический алфавиты верхнего и нижнего регистров
#     Окружена пробелами с двух сторон

regex = r' [A-Za-zА-Яа-яёЁ]{3} '

# 18. Из-за того, что вхождения в регулярных выражениях не пересекаются, мы потеряли некоторые слова в прошлом задании. Попробуйте вместо пробелов использовать шаблон \b, и посмотреть что получится.
#     Нужно найти последовательности, подходящие по следующим условиям:
#     Состоит из 3 букв
#     Используется латинский и кириллический алфавиты верхнего и нижнего регистров
#     Слева и справа от последовательности стоят промежутки \b

regex = r'\b[A-Za-zА-Яа-яёЁ]{3}\b'

# 19. Напишите регулярное выражение, которое найдёт четырёхбуквенное слово в начале строки.
#     Нужно найти последовательности, подходящие по следующим условиям:
#     Состоит из 4 букв
#     Используется латинский и кириллический алфавиты верхнего и нижнего регистров
#     Стоит в начале строки
#     Справа от последовательности граница слова

regex = r'^[A-Za-zА-Яа-яЁё]{4}\b'

# 20. Напишите регулярное выражение, которое найдёт все многоточия в тексте.

regex = r'\.{3}'