# 145. На вход программе поступает одно слово. Если это строка «Python», программа выводит ДА, в противном случае программа выводит НЕТ

print('ДА' if input() == 'Python' else 'НЕТ')

# 146. Во всех странах присутствует подоходный налог. В каких-то странах он больше, в каких-то меньше. В РФ граждане платят подоходный налог в размере 13%.
#      Представьте теперь, что люди с доходом меньше 20000 рублей освобождены от уплаты налога. 
#      Напишите программу, которая получает на вход значение дохода и выводит на экран сумму, оставшуюся после уплаты налога в 13%. Если у человека зарплата меньше 20000р налог не удерживается.

print(x if (x := int(input())) < 20000 else (x := x - x * 0.13))

# 147. Вводятся два целых числа, каждое в отдельной строке. Ваша задача вывести наибольшее из данных чисел. Примечание: используйте только условный оператор, функцией max пользоваться нельзя

print(x if (x := int(input())) > (y := int(input())) else y)

# 148. Программа получает на вход три натуральных числа A, B и C через пробел. Вам необходимо вывести YES в том случае, если A + B = C и вывести NO в противном случае.

((lambda a, b, c: print('YES' if a + b == c else 'NO'))(*map(int, input().split())))

# 149. Программа получает на вход список из целых чисел, при этом гарантируется, что числа в списке повторяться не будут. ​​Ваша задача удалить из этого списка числа 3, 5, 7 и 9. 
#      Обратите внимание, что каждое из чисел 3, 5, 7 и 9. необязательно должно присутствовать в введенном списке. В качестве ответа необходимо распечатать измененный список

l = list(map(int, input().split()))
[l.remove(i) for i in [3, 5, 7, 9] if i in l]
print(l)

# 150. На момент написания текста из РФ можно было вывозить не более 10000$ или эквивалент в другой валюте. При превышении этой суммы необходимо составлять декларацию.
#      Давайте представим, что сумму выше 10000 долларов таможня забирает себе и вам останется только 10000$.
#      Давайте напишем такую программу, которая будет принимать целое положительное число - сумма в долларах. 
#      Если она не превышает 10000$, то выводим текст Сумма <значение> не превышает лимит, проходите. 
#      Если сумма превышает 10000$ выводим текст Ого! <значение>! Куда вам столько? Мы заберем <разница>
#      И конечно же нужно использовать сами знаете кого, иначе ваше решение не пройдет

print(f'Сумма {x} не превышает лимит, проходите' if (x := int(input())) <= 10000 else f'Ого! {x}! Куда вам столько? Мы заберем {x - 10000}')

# 151. На вход вашей программе поступает фраза, если в ней присутствует слово walrus выводим текст Нашли моржа, иначе выводим Никаких моржей тут нет.

print('Нашли моржа' if 'walrus' in (s := input()) else 'Никаких моржей тут нет')

# 152. Программа принимает на вход два слова s и t. Если слово t является словом s, записанным наоборот, выведите YES, иначе выведите NO.
#      Слова состоят из маленьких латинских букв. Входные данные не содержат лишних пробелов. Слова непустые, и их длины не превосходят 100 символов.

print(('NO', 'YES')[input() == input()[::-1]])

# 153. Требуется написать программу, определяющую, является ли четырехзначное натуральное число N палиндромом, т.е. числом, которое одинаково читается слева направо и справа налево.
#      Программа получает на вход целое положительное четырехзначное число N  и должна вывести YES,  если число N является палиндромом, и NO - если не палиндром.

print('YES' if (x := input()) == x[::-1] else 'NO')

# 154. Даны три натуральных числа a, b, c записанные в отдельных строках. Ваша задача определить, существует ли треугольник с такими сторонами.
#      Для этого вспоминаем теорему о существовании треугольника. Она утверждает, что треугольник существует, если сумма любых двух сторон больше оставшейся третьей.
#      Выведите строку YES, если условие теоремы выполняется, иначе выведите строку NO.

a, b, c = sorted([int(input()) for _ in range(3)])
print('YES' if a + b > c else 'NO')

# 155. Вы пользуетесь общественным транспортом? Вероятно, вы расплачивались за проезд и получали билет с номером. 
#      Счастливым билетом называют такой билет с шестизначным номером (иногда и с незначащими нулями), где сумма первых трех цифр равна сумме последних трех. 
#      Т.е. билеты с номерами 385916 и 2011 – счастливые, т.к. 3+8+5=9+1+6 и 0+0+2=0+1+1. Вам требуется написать программу, которая проверяет «счастливость» билета.
#      Программа получает на вход одно целое число N (0 ≤ N < 106) и должна вывести «YES», если билет с номером N счастливый и «NO» в противном случае.

print('YES' if sum((x := list(map(int, f'{int(input()):06d}')))[:3]) == sum(x[3:]) else 'NO')

# 156. Напишите программу, которая на вход получает координаты двух клеток шахматной доски и выводит сообщение о том, являются ли эти клетки одного цвета. 
#      Столбцы на шахматной доске обозначаются английскими строчными буквами.
#      Программа должна выводить YES, когда клетки одного цвета, NO - разного. Гарантируется, что значение колонок это латинские буквы abcdefgh, а строки это символы цифр от 1-8

print('YES' if (ord((x := input())[0]) + int(x[1])) % 2 == (ord((y := input())[0]) + int(y[1])) % 2 else 'NO')

# 157. На вход программе поступает целое число. Ваша задача сохранить в переменную text  строку Even, если введенное число четное, иначе сохраните строку Odd
#      В качестве ответа необходимо вывести переменную text

print((text := 'Odd') if int(input()) % 2 else (text := 'Even'))

# 158. На вход вашей программе поступает два неравных друг другу целых числа в отдельных строках.
#      Ваша задача сохранить наименьшее из этих чисел в переменную  minimum, а наибольшее - в maximum. Использовать нужно, конечно же, тернарный оператор
#      В качестве ответа выведите через пробел сперва minimum , а потом maximum

print(*(minimum, maximum) if (minimum := int(input())) < (maximum := int(input())) else (maximum, minimum))

# 159. Ваша программа принимает на вход предложение и ваша задача определить является ли оно вопросом?
#      Если последний символ предложения это знак ?, то в переменную sentence сохраните строку Вопросительное, иначе запишите строку Обычное.
#      В качестве ответа необходимо вывести переменную sentence

print((sentence := 'Вопросительное') if input()[-1] == '?' else (sentence := 'Обычное'))

# 160. Если расположить рядом два магнита, они начинают взаимодействовать друг с другом. 
#      При этом одинаковые магнитные полюса (север/север или юг/юг) отталкиваются друг от друга, 
#      в то время как разные магнитные полюса (север/юг) притягиваются друг к другу.
#      Ваша программа получает два значения в разных строках - полярности магнитов, которые могут иметь значения либо N ( север) либо S (юг)
#      Ваша задача сохранить в переменную experiment строку Притягиваются, если магниты имеют разную полярность, в противном случае сохраните строку Отталкиваются
#      В качестве ответа необходимо вывести переменную experiment

print((experiment := 'Отталкиваются') if input() == input() else (experiment := 'Притягиваются'))

# 161. В данной задаче необходимо сравнить два целых числа A и B. Они поступают на вход программе отдельно в каждой строке.
#      Ваша задача вывести символ <, если A меньше B, >, если A больше B и =, если A=B.

print('<' if (a := int(input())) < (b := int(input())) else '>' if a > b else '=')

# 162. Даны три целых числа, каждое записано в отдельной строке. Нужно вывести значение наибольшего из данных чисел.
#      Примечание: используйте только условный оператор, функцией max пользоваться нельзя

((lambda x, y, z: print(x if x > y and x > z else z if z > x and z > y else y))(int(input()), int(input()), int(input())))

# 163. На свой день рождения Петя купил красивый и вкусный торт, который имел идеально круглую форму. 
#      Петя не знал, сколько гостей придет на его день рождения, поэтому вынужден был разработать алгоритм, согласно которому он сможет быстро разрезать торт на N равных частей. 
#      Следует учесть, что разрезы торта можно производить как по радиусу, так и по диаметру.
#      Помогите Пете решить эту задачу, определив наименьшее число разрезов торта по заданному числу гостей.
#      Программа получает на вход натуральное число N – число гостей, включая самого виновника торжества.
#      Выведите минимально возможное число разрезов торта.

print(0 if (n := int(input())) == 1 else n if n % 2 else n // 2)

# 164. В отделе работают 3 сотрудника, которые получают заработную плату в рублях. 
#      Требуется определить: на сколько зарплата самого высокооплачиваемого из них отличается от самого низкооплачиваемого.
#      Размеры зарплат всех сотрудников вводятся в одну строку через пробел. Каждая заработная плата – это натуральное число, не превышающее 105. И гарантируется ,что все зарплаты различны
#      Необходимо вывести одно целое число — разницу между максимальной и минимальной зарплатой.
#      Примечание: функциями min и max, а также сортировками пользоваться нельзя, мы же условный оператор изучаем)

(lambda x, y, z: print(x - z if x > y > z else x - y if x > z > y else y - x if y > z > x else y - z if y > x > z else z - x if z > y > x else z - y))(*map(int, input().split()))

# 165. Маленький Петя очень любит подарки. Его мама подарила ему на день рождения две строки равной длины, состоящие из больших и маленьких букв латинского алфавита. 
#      Теперь Петя хочет сравнить эти строки лексикографически. При этом регистр букв значения не имеет, то есть большая буква считается эквивалентной соответствующей маленькой букве. 
#      Помогите Пете выполнить сравнение.
#      В каждой из первых двух строк записано по одной подаренной строке. Длина строк находится в пределах от 1 до 100 включительно. 
#      Гарантируется, что строки имеют одинаковую длину, а также состоят из больших и маленьких букв латинского алфавита.
#      Если первая строка меньше второй, выведите «-1». Если вторая строка меньше первой, выведите «1». Если строки равны, выведите «0». Учтите, что регистр букв не учитывается при сравнении.

print(0 if (s1 := input().lower()) == (s2 := input().lower()) else 1 if s1 > s2 else -1)

# 166. Двое решили посоревноваться в набирании текстов на сайте «Кнопочные гонки». Во время соревнования необходимо ввести текст из s символов. 
#      Первый участник набирает один символ за v1 миллисекунд и имеет пинг t1 миллисекунд. Второй участник набирает один символ за v2 миллисекунд и имеет пинг t2 миллисекунд.
#      При соединении с пингом (задержкой) в t миллисекунд соревнование проходит для участника следующим образом:
#      - Ровно через t миллисекунд после начала соревнования участник получает текст, который необходимо ввести.
#      - Сразу после этого он начинает вводить этот текст.
#      - Ровно через t миллисекунд после того, как он перепечатал весь текст, сайт получает информацию об этом.
#      Победителем в соревновании является тот участник, информация об успехе которого пришла раньше. Если информация пришла от обоих участников одновременно, считается, что произошла ничья.
#      По данной длине текста и информации об участниках, определите исход игры.
#      Первая строка содержит пять целых чисел s, v1, v2, t1, t2 (1 ≤ s, v1, v2, t1, t2 ≤ 1000) — количество символов в тексте, скорость набора текста первым участником, 
#      скорость набора текста вторым участником, пинг первого участника и пинг второго участника.
#      Если выиграет первый участник, выведите «First». Если выиграет второй участник, выведите «Second». В случае ничьей выведите «Friendship».

l = list(map(int, input().split()))
r = ((l[0] * l[1] + 2 * l[3]) - (l[0] * l[2] + 2 * l[4]))
print('Friendship' if r == 0 else 'First' if r < 0 else 'Second')

# 167. При игре в "Города" игроки по очереди называют названия городов так, чтобы первая буква каждого нового слова совпадала с последней буквой предыдущего. 
#      При этом считают, что если последняя буква предыдущего слова — мягкий знак, то с первой буквой следующего слова надо сравнивать букву, предшествующую мягкому знаку.
#      Напишите программу, которая считывает подряд две строки, после чего выводит «Good», если последний символ первой строки совпадает с первым символом второй 
#      (с учётом правила про мягкий знак), и «Bad» в противном случае.

w1, w2 = input().lower().replace('ь', ''), input().lower()
print('Good' if w1[-1] == w2[0] else 'Bad')

# 168. Классическая задача для начинающих. 
#      Ваша программа должна считать одно натуральное число, после чего вывести:
#      - “Fizz”, если это число делится на 3;
#      - “Buzz”, если это число делится на 5;
#      - “FizzBuzz”, если выполнены оба предыдущих условия;
#      - само это число в остальных случаях.

print('Fizz' * (not (m := int(input())) % 3) + 'Buzz' * (not m % 5) or m)

# 169. Даны три целых числа, записанных в отдельных строках. Определите, сколько среди них совпадающих.
#      Программа должна вывести одно из чисел: 3 (если все совпадают), 2 (если два совпадают) или 0 (если все числа различны).

xyz = {int(input()), int(input()), int(input())}
print(0 if len(xyz) == 3 else 4 - len(xyz))

# 170. Программа определяет наименование месяца по его номеру n. Название месяца пишется с заглавной буквы.
#      Программа получает на вход номер месяца - натуральное число N (N<=12) и в зависимости от его значения вывод название месяца 

month = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']
print(month[(x := int(input())) - 1])

# 171. Ваша программа получает на вход возраст человека. Вам необходимо вывести на экран сообщение:
#      - "Младенец", если возраст меньше 2х лет;
#      - "Малыш", если возраст от 2, но меньше 4;
#      - "Ребенок", если возраст от 4 лет, но меньше 12;
#      - "Подросток", когда возраст от 12 лет, но меньше 19;
#      - "Взрослый человек", когда возраст от 19 лет, но меньше 65;
#      - "Пожилой человек", если возраст 65 и более.

x = int(input())
if x < 2: print('Младенец')
elif 2 <= x < 4: print('Малыш')
elif 4 <= x < 12: print('Ребенок')
elif 12 <= x < 19: print('Подросток')
elif 19 <= x < 65: print('Взрослый человек')
else: print('Пожилой человек')

# 172. Напишите программу, которая считывает с клавиатуры два вещественных числа, а затем строку. 
#      Если эта строка является обозначением одной из четырёх основных математических операций (+, -, * или /), то выведите результат применения этой операции к введенным ранее числам, 
#      в противном случае выведите «Неизвестно». Также «Неизвестно» следует вывести, если пользователь захочет поделить на ноль.
#      Входные данные: Два вещественных числа в каждой отдельной строчки. На третьей строке вводится символ операции
#      Необходимо посчитать значение операции «+», «-», «*», «/». Если ввели символ, который не относится к данным операциям, необходимо вывести «Неизвестно». 
#      «Неизвестно» также выводится при попытке деления на ноль

try:
    print(eval('{0} {2} {1}'.format(input(), input(), input())))
except:
    print('Неизвестно')

# 173. Напишите программу, которая имитирует проверку пароля, придуманного пользователем. Пользователь сперва вводит пароль, потом вводит подтверждение пароля. 
#      Вам нужно обработать следующие ситуации:
#      - если пароль, который ввёл пользователь (в первый раз) короче 7 символов, программа выводит Short
#      - если пароль достаточно длинный, но введённый во второй раз пароль не совпадает с первым, программа выводит Difference
#      - если же и эта проверка пройдена успешно, программа выводит латинскими буквами OK

print('Short' if len((p := input())) < 7 else 'Difference' if p != input() else 'OK')

# 174. Давайте попробуем потренироваться в операторе match-case
#      Чуть ранее студенты технических специальностей университета учились 5 лет (специалитет) и затем им вручался аттестат. 
#      Ваша программа программа будет получать на вход целое число - номер курса, и в зависимости от номера выводить следующий текст:
#      - если ввели 1, выведите сообщение Совсем еще зеленый студентик
#      - если ввели 2, выведите сообщение Джун-студент
#      - если ввели 3, выведите сообщение Мидл-студент
#      - если ввели 4, выведите сообщение Сеньор-студент
#      - если ввели 5, выведите сообщение Босс качалки
#      - при вводе остальных значений, выведите текст Неизвестный курс
#      Используйте при решении оператор match-case

match int(input()):
    case 1: print('Совсем еще зеленый студентик')
    case 2: print('Джун-студент')
    case 3: print('Мидл-студент')
    case 4: print('Сеньор-студент')
    case 5: print('Босс качалки')    
    case _: print('Неизвестный курс')

# 175. Часто можно услышать такой вопрос. Давайте это запрограммируем.
#      Программа получает на вход номер месяца - натуральное число N (1 ≤ N ≤ 12) и в зависимости от его значения выводит количество дней в месяце. 
#      Будем считать, что год невисокосный. При решении конечно же используйте оператор match-case 

match m := int(input()):
    case 4 | 6 | 9 | 11: print(30)
    case 2: print(28)
    case _: print(31)

# 176. Программа ваша получает на вход строку - название знака зодиака и затем сообщает к какому типу относится введенный знак. Логика определения следующая:
#      - если введут любое из значений Овен, Лев, Стрелец, то программа выводит текст Огненный
#      - если введут любое из значений Телец, Дева, Козерог, то программа выводит текст Земной
#      - если введут любое из значений Близнецы, Весы, Водолей, то программа выводит текст Воздушный
#      - если введут любое из значений Рак, Скорпион, Рыбы, то программа выводит текст Водный 

match input():
    case 'Овен' | 'Лев' | 'Стрелец': print('Огненный')
    case 'Телец' | 'Дева' | 'Козерог': print('Земной')
    case 'Близнецы' | 'Весы' | 'Водолей': print('Воздушный')
    case _: print('Водный')